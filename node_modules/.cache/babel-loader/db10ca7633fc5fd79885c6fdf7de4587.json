{"ast":null,"code":"var _jsxFileName = \"/Users/dineshsanala/CoDinG/dev/live/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/dineshsanala/CoDinG/dev/live/src/contexts/AuthContext.js"],"names":["React","useContext","useState","useEffect","getAuth","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","login","logout","signOut","resetPassword","updateEmail","updatePassword","unsubscribe","user","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,8BAHF,EAIEC,0BAJF,EAKEC,sBALF,QAMO,eANP;AAOA,SAASC,IAAT,QAAqB,aAArB;;AAEA,MAAMC,WAAW,gBAAGV,KAAK,CAACW,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOX,UAAU,CAACS,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASiB,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC/B,WAAOf,8BAA8B,CAACG,IAAD,EAAOW,KAAP,EAAcC,QAAd,CAArC;AACD;;AAED,WAASC,KAAT,CAAeF,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOd,0BAA0B,CAACE,IAAD,EAAOW,KAAP,EAAcC,QAAd,CAAjC;AACD;;AAED,WAASE,MAAT,GAAkB;AAChB,WAAOd,IAAI,CAACe,OAAL,EAAP;AACD;;AAED,WAASC,aAAT,CAAuBL,KAAvB,EAA8B;AAC5B,WAAOZ,sBAAsB,CAACC,IAAD,EAAOW,KAAP,CAA7B;AACD;;AAED,WAASM,WAAT,CAAqBN,KAArB,EAA4B;AAC1B,WAAOL,WAAW,CAACW,WAAZ,CAAwBN,KAAxB,CAAP;AACD;;AAED,WAASO,cAAT,CAAwBN,QAAxB,EAAkC;AAChC,WAAON,WAAW,CAACY,cAAZ,CAA2BN,QAA3B,CAAP;AACD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,WAAW,GAAGvB,kBAAkB,CAACI,IAAD,EAAQoB,IAAD,IAAU;AACrDb,MAAAA,cAAc,CAACa,IAAD,CAAd;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHqC,CAAtC;AAKA,WAAOU,WAAP;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAME,KAAK,GAAG;AACZf,IAAAA,WADY;AAEZO,IAAAA,KAFY;AAGZH,IAAAA,MAHY;AAIZI,IAAAA,MAJY;AAKZE,IAAAA,aALY;AAMZC,IAAAA,WANY;AAOZC,IAAAA;AAPY,GAAd;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,KAA7B;AAAA,cACG,CAACb,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IApDeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport {\n  getAuth,\n  onAuthStateChanged,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n} from \"firebase/auth\";\nimport { auth } from \"../firebase\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  function signup(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return auth.signOut();\n  }\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}